name: VeriFlow | Run Class Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

run-name: 'üë∑üöß[#${{ github.run_number }}][${{ github.event.inputs.testType }} Tests] üåçEnv: ${{ github.event.inputs.appEnvironment }} | üè∑Ô∏èRelease: ${{ github.event.inputs.appRelease }} | üåç BrowserStack'

on:
  workflow_dispatch:
    inputs:
      testType:
        description: 'Select the Type of Test'
        required: true
        type: choice
        options:
          - 'Web'
          - 'API'
          - 'Electron'
      appEnvironment:
        description: 'Select the VeriFlow application environment:'
        required: true
        type: choice
        options:
          - 'UAT'
          - 'QA'
          - 'DEV'
      appRelease:
        description: 'Enter the VeriFlow application release:'
        required: true
        default: 'latest'
        type: string
      testConfig:
        description: 'Select the Test File/Class'
        required: true
        type: choice
        options:
          - 'automation-exercise-tests.spec.ts'
          - 'practice-expandtesting-tests.spec.ts'
          - 'sauce-demo-tests.spec.ts'
      browserConfig:
        description: 'Select Browser for Web Testing'
        required: true
        type: choice
        options:
          - 'chrome'
          - 'firefox'
          - 'edge'
          - 'safari'
      enableTestRetry:
        description: 'Enable re-run of failing tests?'
        required: true
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    name: 'Execute Playwright Tests on BrowserStack üõ†Ô∏è'
    env:
      PERSONAL_GITHUB_KEY: ${{ secrets.PERSONAL_GITHUB_KEY }}
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      CICD: true

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Install Playwright Browsers'
        run: npx playwright install --with-deps

      - name: 'Run Playwright Tests on BrowserStack'
        id: test_project
        run: |
          mkdir -p test-results/
          TEST_FILE="${{ github.event.inputs.testConfig }}"
          
          PLAYWRIGHT_COMMAND="BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }} \
          BROWSERSTACK_ACCESS_KEY=${{ secrets.BROWSERSTACK_ACCESS_KEY }} \
          npx playwright test tests/testcases/api/$TEST_FILE \
          --project=${{ github.event.inputs.browserConfig }} \
          --retries=${{ github.event.inputs.enableTestRetry }} \
          --workers=2"

          echo "Executing command: $PLAYWRIGHT_COMMAND"
          eval $PLAYWRIGHT_COMMAND

      - name: 'Generate Allure Report'
        run: |
          mkdir -p test-results/
          npx allure generate test-results/ --clean -o allure-report/

      - name: 'Upload Allure Report'
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
          retention-days: 7

      - name: 'Upload Test Results'
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 7

      - name: 'Post Comment on PR'
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const testMessage = process.env.test_result === 'success'
              ? '‚úÖ Playwright Tests passed successfully on BrowserStack.'
              : `‚ùå Playwright Tests failed. [View Workflow Run](${url})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testMessage
            })
