# name: VeriFlow | Run Regression Tests [Multiple Threads]

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: false

# run-name: "üë∑üöß[#${{ github.run_number }}][TESTS] üåçEnv: ${{ github.event_name == 'schedule' && 'UAT' || github.event.inputs.appEnvironment }} | üè∑Ô∏èRelease: ${{ github.event_name == 'schedule' && 'latest' || github.event.inputs.appRelease }}"

# on:
#   schedule:
#     - cron: '30 4  * * 1-5'
#     - cron: '30 5  * * 1-5'
#     - cron: '30 6  * * 1-5'
#     - cron: '30 7  * * 1-5'
#     - cron: '00 16 * * 1-5'
#     - cron: '00 18 * * 1-5'
#     - cron: '00 20 * * 1-5'

#   workflow_dispatch:
#     inputs:
#       appModule:
#         description: 'Select the VeriFlow application module:'
#         required: true
#         type: choice
#         options:
#           - 'VeriFlow_EU'
#           - 'VeriFlow_NA'
#           - 'VeriFlow_ASIA'
#       appEnvironment:
#         description: 'Select the VeriFlow environment:'
#         required: true
#         type: choice
#         options:
#           - 'UAT'
#           - 'QA'
#           - 'DEV'
#       testGroup:
#         description: 'Select the test group:'
#         required: true
#         type: choice
#         options:
#           - 'ALL'
#           - 'REGRESSION'
#           - 'SMOKE'
#       devicePlatform:
#         description: 'Select the device platform:'
#         required: true
#         type: choice
#         options:
#           - 'android'
#           - 'ios'
#       appRelease:
#         description: 'Enter the application release:'
#         required: true
#         default: 'latest'
#         type: string
#       enableTestRetry:
#         description: 'Enable retry for failing tests?'
#         required: true
#         default: false
#         type: boolean
#       enableXrayImport:
#         description: 'Enable test results upload to XRay?'
#         required: true
#         default: false
#         type: boolean
#       enableSlackReport:
#         description: 'Enable test results notification on Slack?'
#         required: true
#         default: false
#         type: boolean

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: 'Build & Execute Testsüõ†Ô∏è'
#     env:
#       APP_MODULE: 'DEFAULT'
#       APP_ENVIRONMENT: ${{ github.event_name == 'schedule' && 'UAT' || github.event.inputs.appEnvironment }}
#       APP_RELEASE: ${{ github.event_name == 'schedule' && 'latest' || github.event.inputs.appRelease }}
#       DEVICE_PLATFORM: ${{ github.event_name == 'schedule' && 'android' || github.event.inputs.devicePlatform }}
#       ENABLE_TEST_RETRY: ${{ github.event_name == 'schedule' && 'false' || github.event.inputs.enableTestRetry }}
#       ENABLE_XRAY_IMPORT: ${{ github.event_name == 'schedule' && 'true' || github.event.inputs.enableXrayImport }}
#       ENABLE_SLACK_REPORT: ${{ github.event_name == 'schedule' && 'true' || github.event.inputs.enableSlackReport }}
#       CICD: true

#     steps:
#       - name: 'Checkout Code'
#         uses: actions/checkout@v4

#       - name: 'Set up Elixir'
#         uses: actions/setup-elixir@v2
#         with:
#           elixir-version: '1.14'
#           otp-version: '25.0'

#       - name: 'Install Dependencies'
#         run: mix deps.get

#       - name: 'Run Tests in Parallel'
#         run: |
#           MIX_COMMAND="mix test --trace \
#           --env=${{ env.APP_ENVIRONMENT }} \
#           --release=${{ env.APP_RELEASE }} \
#           --platform=${{ env.DEVICE_PLATFORM }} \
#           --retry=${{ env.ENABLE_TEST_RETRY }}"

#           echo "Executing: $MIX_COMMAND"
#           eval $MIX_COMMAND
#         shell: bash

#       - name: 'Upload Test Results'
#         uses: actions/upload-artifact@v4
#         with:
#           name: 'veriflow-test-results'
#           path: test-results/
#           retention-days: 7

#       - name: 'Post Slack Report (Optional)'
#         if: ${{ env.ENABLE_SLACK_REPORT == 'true' }}
#         uses: rtCamp/action-slack-notify@v2
#         env:
#           SLACK_WEBHOOK: ${{ secrets.SLACK_TOKEN }}
#         with:
#           args: 'Tests completed for VeriFlow - Env: ${{ env.APP_ENVIRONMENT }}'

#   publish-report:
#     needs: build
#     runs-on: ubuntu-latest
#     name: 'Generate Test Reportsüìä'
#     steps:
#       - name: 'Download Test Results'
#         uses: actions/download-artifact@v4
#         with:
#           name: 'veriflow-test-results'
#           path: test-results/

#       - name: 'Generate Report'
#         run: ./generate-report.sh test-results/
